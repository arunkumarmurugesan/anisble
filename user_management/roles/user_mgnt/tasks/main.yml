---
-
  name: "Generate passwords for usser: \"{{ uusername }}\""
  register: genpass
  shell: "python -c 'import crypt; print crypt.crypt(\"{{ upassword }}\", \"$6$random_salt\")'"
  tags: add_user,password_reset

-
  name: "Creating user : \"{{ uusername }}\""
  user: "name={{ uusername }} password={{ genpass.stdout }} groups={{ groupname }} createhome=yes append=yes shell=/bin/bash"
  tags: add_user

-
  name: "Expiring password for user \"{{ uusername }}\""
  shell: "chage -d 0 \"{{ uusername }}\""
  tags: add_user,passwrod_expire

- name: "Allow the \"{{ uusername }}\" user to have password based sudo"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%{{ uusername }}'
    line: '{{ uusername }} ALL=(ALL) PASSWD: ALL'
    validate: 'visudo -cf %s'
  tags: add_user,allow_sudo_users

- name: "Add user \"{{ uusername }}\" to AllowUsers in Amazon"
  replace:
    dest: /etc/ssh/sshd_config
    backup: yes
    regexp: '^(AllowUsers(?!.*\b{{ uusername }}\b).*)$'
    replace: '\1 {{ uusername }}'
    validate: '/usr/sbin/sshd -T -f %s'
  when: ansible_distribution == 'Amazon'
  notify: 
    - restart sshd amazon
  tags: add_user,allowuser_ssh


- name: "Add user \"{{ uusername }}\" to AllowUsers in Ubuntu"
  replace:
    dest: /etc/ssh/sshd_config
    backup: yes
    regexp: '^(AllowUsers(?!.*\b{{ uusername }}\b).*)$'
    replace: '\1 {{ uusername }}'
    validate: '/usr/sbin/sshd -T -f %s'
  when: ansible_distribution == 'Ubuntu'
  notify:
    - restart sshd ubuntu
  tags: add_user,allowuser_ssh

- name: "Reset a user: \"{{ uusername }}\" password"
  user: "name={{ uusername }} update_password=always password={{ genpass.stdout }}"
  tags: password_reset

- name: "Delete a user  \"{{ uusername }}\""
  user: "name={{ uusername }} state=absent remove=yes"
  tags: delete_user

- name: Set authorized key took from file
  authorized_key:
    user: '{{ uusername }}'
    state: present
    key: "{{ lookup('file', '{{ pub_file }}') }}"
  tags: add_authorized_user_key
-
  name: "Unlock the user account \"{{ uusername }}\""
  shell: "pam_tally2 -u \"{{ uusername }}\" -r && pam_tally2 -u \"{{ uusername }}\" -r"
  tags: unlock_user
